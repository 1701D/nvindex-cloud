apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-worker"
  labels:
    app.kubernetes.io/name: "{{ .Release.Name }}"
    app.kubernetes.io/component: worker
spec:
  replicas: {{ add .Values.nodeCount -1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ .Release.Name }}"
      app.kubernetes.io/component: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ .Release.Name }}"
        app.kubernetes.io/component: worker
    spec:
      volumes:
        - name: rsync-config-files
          emptyDir: {}
      initContainers:
        - name: rsync-config-files
          image: google/cloud-sdk:alpine
          volumeMounts:
            - name: rsync-config-files
              mountPath: /config-external
          command: ['bash']
          args: ['-c', 'gsutil -m rsync -d -r {{ .Values.configLocation }} /config-external']
      containers:
        - name: nvindex-tape
          image: "{{ .Values.imageNvindex }}"
          command: [ './nvindex-remote-service.sh' ]
          args: [
            '--nogl',
            '--reference-viewer',
            '--components',
            '--add', 'project_remote.prj',
            '-dice::network::mode', 'TCP_WITH_DISCOVERY',
            '-dice::network::retention', '30',
            '-app::enable_fail_safety', 'yes',
            '-dice::network::discovery_address', '$(NVINDEX_DISCOVERY_SERVICE_HOST):$(NVINDEX_DISCOVERY_SERVICE_PORT)',
          ]
          env:
            - name: LICENSE_SEARCH_PATH
              value: "/config-external"
          volumeMounts:
          - name: rsync-config-files
            mountPath: /config-external
          ports:
          - containerPort: 5555
          - containerPort: 10000
          - containerPort: 10001
          resources:
            limits:
              nvidia.com/gpu: "{{ .Values.gpuCount }}"
